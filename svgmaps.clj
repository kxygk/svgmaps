(ns
    svgmaps
  "Functions for drawing some generic svgmaps"
  (:use geoprim)
  (:require
   [thi.ng.geom.svg.core :as svg]
   [thi.ng.geom.viz.core :as viz]))

(def
  standard-width
  "The width all the SVG images will be output at"
  1200.0)

(defn
  to-standard-svg
  "Places the SVG elements in a SVG block.
  The block is of constant width of `standard-width`
  The height is dynamics as to preserves the aspect ration"
  [svg-elements
   [width-deg
    height-deg]]
  (let [aspect-ratio
        (/
          width-deg
          height-deg)]
    (->>
      svg-elements
      (svg/svg
        {:width   standard-width
         :height  (/
                    standard-width
                    aspect-ratio)
         :viewBox (str
                    "0 0 "
                    width-deg
                    " "
                    height-deg)}))))

(defn
  points-of-interest
  "Given the `points` seq of geographic coordinates (as `geoprim/point`s)
  as well as a `region` to display them over.
  Return a svg map of the points
  Note:: any decorations go in `attribs`"
  ([points
    region]
   (let [attribs
         {:fill "red"}]
     (points-of-interest
       points
       region
       attribs)))
  ([points
    region
    attribs]
   (let [longer-axis-length (apply
                              max
                              (dimension
                                region))]
     ;; used to properly scale the POI dot
     (apply
       svg/group
     attribs
     (map (fn
            [point]
            (let [[eas
                   sou] (geoprim/point-to-eassou
                          region
                          point)]
              (svg/circle
                [eas
                 sou]
                (/
                  longer-axis-length
                  100))))
          points)))))

#_
(defn
  linestrip
  "Given a svg `line-strip` and a `region`
  return a complete svg hiccup
  Note::
  `line-strip` can be generated by [[geojson2svg/read-file]]"
  [line-strip
   region
   attribs]
  (quickthing/set-svg-coords
    (svg/group
      attribs
      line-strip)
    (geoprim/dimension
      region)))

;; Region Around Taiwan and Chinese coast
#_
(def
  minnan-region
  (geoprim/region
    (geoprim/point
      26.23
      116.47)
    (geoprim/point
      21.7
      125)))

#_
(def
  shoreline-filestr
  "/home/kxygk/Data/shoreline/GSHHG/shoreline.json")

#_
(spit
  "output3.svg"
  (->
    (svg/group
      {}
      (geojson2svg/read-file
        shoreline-filestr
        minnan-region)
      (latlon-axis
        minnan-region))
    (quickthing/set-display-width
      1200
      (geoprim/dimension
        minnan-region))
    quickthing/svg2xml))

(defn
  axis-degree-formatter
  "Returns a function that formats a value to a given spacing
  .Ex:
  * 123 at 0.1 spacing gives: 123.0°
  * 123.3 at 0.01 spacing gives: 123.30°"
  [tick-spacing]
  (let[power (Math/log10
               tick-spacing)]
    (fn
      [tick-value]
      (str
        ((viz/value-formatter
           (if (neg? power)
             (->
               power
               Math/abs
               long)
             0))
         tick-value)
        "°"))))

(defn
  scaled-tick-spacing
  [region]
  (let [[width
         height] (dimension
                   region)]
    (->>
      (min
        width
        height)
      Math/log10
      Math/ceil
      dec
      (Math/pow
        10))))

(defn
  latlon-axis
  "Print axis with Lat Lon increments
  Labels are on map area"
  ([region]
   (latlon-axis
     region
     100))
  ([region
    scale-factor]
   (let[[width
         height]     (dimension
                       region)
        [norwes
         _
         soueas
         _]          (four-corners
                       region)
        [y-start
         x-start]    (as-latlon
                       norwes)
        [y-end
         x-end]      (as-latlon
                       soueas)
        tick-spacing (scaled-tick-spacing
                       region)
        tick-size    (/;fonts and axis size based on the larger dimension
                       (max
                         width
                         height)
                       scale-factor)]
     (->
       {:x-axis (viz/linear-axis
                  {:domain      [x-start
                                 x-end]
                   :range       [0
                                 width]
                   :visible     true
                   :major       tick-spacing
                   :major-size  (*
                                  -2.0
                                  tick-size)
                   :label       (viz/default-svg-label 
                                  (axis-degree-formatter
                                    tick-spacing))
                   :label-style {:fill        "black"
                                 :stroke      "none"
                                 :font-family "Arial, sans-serif"
                                 :font-size   tick-size
                                 :text-anchor "start"
                                 :transform   (str
                                                "translate("
                                                (/
                                                  tick-size
                                                  4.0)
                                                " "
                                                (-
                                                  (/ tick-size
                                                     2.0))
                                                ")")}
                   :label-dist  0.0
                   :pos         height
                   :attribs     {:stroke-width (/
                                                 tick-size
                                                 10.0)}})
        #_#_
        :grid   {:major   true
                 :attribs {:stroke-width     0.01
                           :stroke-dasharray "0.01 0.01"}}
        :y-axis (viz/linear-axis
                  {:domain      [y-end
                                 y-start]
                   :range       [height
                                 0]
                   :visible     true
                   :major       tick-spacing
                   :major-size  (*
                                      -2.0
                                      tick-size)
                   :label       (viz/default-svg-label 
                                   (axis-degree-formatter
                                     tick-spacing))
                   :label-style {:fill        "black"
                                 :stroke      "none"
                                 :font-family "Arial, sans-serif"
                                 :font-size   tick-size
                                 :text-anchor "start"
                                 :transform   (str
                                                "translate("
                                                (/
                                                  tick-size
                                                  2.0)
                                                " "
                                                (/
                                                  tick-size
                                                  8.0)
                                                ")")}
                   :label-dist  (/
                                  tick-size
                                  10.0)
                   :label-y     tick-size
                   :pos         0.0
                   :attribs     {:stroke-width (/
                                                 tick-size
                                                 10.0)}})
        :data   [{:values  [[0.1
                             0.1]]
                  :attribs {:fill   "none"
                            :stroke "none"}
                  :layout  viz/svg-scatter-plot}]}
       viz/svg-plot2d-cartesian))))

#_
(let[;;
     minnan-region
     (geoprim/region
       (geoprim/point
         26.23
         116.47)
       (geoprim/point
         21.7
         125))
     ;;
     #_#_
     [width
      height]
     (dimension
       minnan-region)]

  (spit
    "just-a-grid.svg"
    (-> 
      (latlon-axis
        minnan-region)
      (quickthing/set-display-width
        1000
        (dimension
          minnan-region))
      svg/serialize)))
